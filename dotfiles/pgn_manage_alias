#
# Functions
#
pgnm_checkenv() {
    if [[ -v "${PGN_MANAGE_SOURCE_PATH}" ]]; then
        echo 'PGN-MANAGE error: PGN_MANAGE_SOURCE_PATH is not set.' > /dev/stderr
        return 255
    elif [[ -z "${PGN_MANAGE_SOURCE_PATH}" ]]; then
        echo 'PGN-MANAGE error: PGN_MANAGE_SOURCE_PATH is empty.' > /dev/stderr
        return 255
    fi

    if [[ -v "${PGN_MANAGE_DOWNLOADS_PATH}" ]]; then
        echo 'PGN-MANAGE error: PGN_MANAGE_DOWNLOADS_PATH is not set.' > /dev/stderr
        return 255
    elif [[ -z "${PGN_MANAGE_DOWNLOADS_PATH}" ]]; then
        echo 'PGN-MANAGE error: PGN_MANAGE_DOWNLOADS_PATH is empty.' > /dev/stderr
        return 255
    fi

    if [[ -v "${PGN_MANAGE_USERNAME}" ]]; then
        echo 'PGN-MANAGE error: PGN_MANAGE_USERNAME is not set.' > /dev/stderr
        return 255
    elif [[ -z "${PGN_MANAGE_USERNAME}" ]]; then
        echo 'PGN-MANAGE error: PGN_MANAGE_USERNAME is empty.' > /dev/stderr
        return 255
    fi
}

pgnm_exec() {
    if pgnm_checkenv; then
        pushd "$PGN_MANAGE_SOURCE_PATH" > /dev/null || exit
        pipenv run python ./pgn_manage.py "$@"
        popd > /dev/null || exit
    fi
}

pgnm_download() {
    pgnm_exec download --user "$PGN_MANAGE_USERNAME" --output "$PGN_MANAGE_DOWNLOADS_PATH" --source all
}

#
# Aliases
#

alias chessdl="pgnm_download"
